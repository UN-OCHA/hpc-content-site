ncms_ui.login_proxy_page:
  path: '/ncms/login'
  defaults:
    _controller: '\Drupal\ncms_ui\Controller\LoginProxyPageController::page'
    _title_callback: '\Drupal\ncms_ui\Controller\LoginProxyPageController::title'
  requirements:
    _access: 'TRUE'

entity.node.soft_delete:
  path: '/node/{node}/trash'
  defaults:
    _form: '\Drupal\ncms_ui\Form\ContentSoftDeleteForm'
  requirements:
    _user_is_logged_in: 'TRUE'
    _entity_access: 'node.soft delete'
    node: \d+
  options:
    parameters:
      node:
        type: entity:node

entity.node.restore:
  path: '/node/{node}/restore'
  defaults:
    _form: '\Drupal\ncms_ui\Form\ContentRestoreForm'
  requirements:
    _user_is_logged_in: 'TRUE'
    _entity_access: 'node.restore'
    node: \d+
  options:
    parameters:
      node:
        type: entity:node

entity.media.soft_delete:
  path: '/media/{media}/trash'
  defaults:
    _form: '\Drupal\ncms_ui\Form\ContentSoftDeleteForm'
  requirements:
    _user_is_logged_in: 'TRUE'
    media: \d+
  options:
    parameters:
      media:
        type: entity:media

entity.media.restore:
  path: '/media/{media}/restore'
  defaults:
    _form: '\Drupal\ncms_ui\Form\ContentRestoreForm'
  requirements:
    _user_is_logged_in: 'TRUE'
    _entity_access: 'media.restore'
    media: \d+
  options:
    parameters:
      media:
        type: entity:media

entity.node_add.submit_confirm:
  path: '/node/add/confirm'
  defaults:
    _form: '\Drupal\ncms_ui\Form\ContentSubmitConfirmForm'
  requirements:
    _user_is_logged_in: 'TRUE'

entity.node_edit.submit_confirm:
  path: '/node/{node}/edit/confirm'
  defaults:
    _form: '\Drupal\ncms_ui\Form\ContentSubmitConfirmForm'
  requirements:
    _user_is_logged_in: 'TRUE'
    node: \d+
  options:
    parameters:
      node:
        type: entity:node

entity.node.iframe:
  path: '/node/{node}/iframe'
  defaults:
    _controller: '\Drupal\ncms_ui\Controller\ViewController::viewIframe'
    _title_callback: '\Drupal\ncms_ui\Controller\ViewController::previewTitle'
  requirements:
    _user_is_logged_in: 'TRUE'
    _entity_access: 'node.view'
    node: \d+
  options:
    parameters:
      node:
        type: entity:node

entity.node_revision.iframe:
  path: '/node/{node}/iframe/{node_revision}'
  defaults:
    _controller: '\Drupal\ncms_ui\Controller\ViewController::viewIframe'
    _title_callback: '\Drupal\ncms_ui\Controller\ViewController::previewTitle'
  requirements:
    _user_is_logged_in: 'TRUE'
    _entity_access: 'node_revision.view revision'
    node: \d+
    node_revision: \d+
  options:
    parameters:
      node:
        type: entity:node
      node_revision:
        type: entity_revision:node

entity.node.standalone:
  path: '/node/{node}/standalone'
  defaults:
    _controller: '\Drupal\node\Controller\NodeViewController::view'
    _title_callback: '\Drupal\node\Controller\NodeViewController::title'
  requirements:
    _user_is_logged_in: 'TRUE'
    _entity_access: 'node.view'
    node: \d+
  options:
    parameters:
      node:
        type: entity:node

entity.node_revision.standalone:
  path: '/node/{node}/standalone/{node_revision}'
  defaults:
    _controller: '\Drupal\node\Controller\NodeController::revisionShow'
    _title_callback: '\Drupal\node\Controller\NodeController::revisionPageTitle'
  requirements:
    _user_is_logged_in: 'TRUE'
    _entity_access: 'node_revision.view revision'
    node: \d+
  options:
    parameters:
      node:
        type: entity:node
      node_revision:
        type: entity_revision:node

entity.node.revision.publish:
  path: '/node/{node}/revisions/{node_revision}/publish'
  defaults:
    _controller: '\Drupal\ncms_ui\Controller\RevisionController::publish'
  requirements:
    _user_is_logged_in: 'TRUE'
    _entity_access: 'node_revision.publish revision'
    node: \d+
  options:
    parameters:
      node:
        type: entity:node
      node_revision:
        type: entity_revision:node

entity.node.revision.unpublish:
  path: '/node/{node}/revisions/{node_revision}/unpublish'
  defaults:
    _controller: '\Drupal\ncms_ui\Controller\RevisionController::unpublish'
  requirements:
    _user_is_logged_in: 'TRUE'
    _entity_access: 'node_revision.unpublish revision'
    node: \d+
  options:
    parameters:
      node:
        type: entity:node
      node_revision:
        type: entity_revision:node