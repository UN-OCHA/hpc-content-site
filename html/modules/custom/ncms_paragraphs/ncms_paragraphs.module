<?php

/**
 * @file
 * NCMS Paragraphs module file.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\ncms_paragraphs\Entity\NcmsParagraphInterface;
use Drupal\ncms_paragraphs\Helpers\StringHelper;

/**
 * Implements hook_entity_bundle_info_alter().
 */
function ncms_paragraphs_entity_bundle_info_alter(array &$bundles) {
  foreach (array_keys($bundles['paragraph'] ?? []) as $paragraph_type) {
    $class_name = '\\Drupal\ncms_paragraphs\\Entity\\Paragraph\\' . StringHelper::makeCamelCase($paragraph_type, FALSE);
    if (!class_exists($class_name)) {
      continue;
    }
    $bundles['paragraph'][$paragraph_type]['class'] = $class_name;
    $bundles['paragraph'][$paragraph_type]['label'] = ucfirst(str_replace('_', ' ', $paragraph_type));
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ncms_paragraphs_form_layout_paragraphs_component_form_alter(&$form, FormStateInterface $form_state) {
  /** @var \Drupal\layout_paragraphs\Form\EditComponentForm $form_object */
  $form_object = $form_state->getFormObject();
  $paragraph = $form_object->getParagraph();

  if ($paragraph instanceof NcmsParagraphInterface) {
    $paragraph->entityFormAlter($form, $form_state);
  }

  // Don't trigger "Required" messages when canceling the add/edit form.
  $form['actions']['cancel']['#limit_validation_errors'] = [];

  // Add our library to improve the display.
  $form['#attached']['library'][] = 'ncms_paragraphs/paragraph_edit_form';

  // Move the behavior plugin from a stand-alone fieldset into existing field
  // groups.
  if (!empty($form['#fieldgroups']) && !empty($form['behavior_plugins'])) {

    $form['behavior_plugins']['#parents'] = ['behavior_plugins'];
    $form['behavior_plugins'] = $form_object->behaviorPluginsForm($form['behavior_plugins'], $form_state, $form);
    unset($form['behavior_plugins']['#process']);

    $group_name = 'group_settings';
    if (empty($form['#fieldgroups'][$group_name])) {
      $group = clone end($form['#fieldgroups']);
      $group->children = ['behavior_plugins'];
      $group->format_settings['formatter'] = 'close';
      $group->weight = $group->weight + 1;
      $group->group_name = $group_name;
      $form['#fieldgroups'][$group->group_name] = $group;
    }
    else {
      $form['#fieldgroups'][$group_name]->children[] = 'behavior_plugins';
    }
    $form['#fieldgroups'][$group_name]->label = t('Additional settings');
    $form['#group_children']['behavior_plugins'] = $group_name;
  }

  if (!empty($form['field_dataset'])) {
    // Hide the fieldset.
    $form['field_dataset']['widget'][0]['#type'] = 'container';
  }

}

/**
 * Implements hook_preprocess_layout_paragraphs_builder().
 */
function ncms_paragraphs_preprocess_layout_paragraphs_builder(&$variables) {
  $variables['#attached']['library'][] = 'ncms_paragraphs/layout_paragraphs';
}

/**
 * Implements hook_layout_paragraphs_builder_component_menu().
 */
function ncms_paragraphs_preprocess_layout_paragraphs_builder_component_menu(&$variables) {
  /** @var \Drupal\ncms_paragraphs\ComponentMenu $component_menu */
  $component_menu = \Drupal::service('ncms_paragraphs.component_menu');
  $component_menu->preprocessTemplate($variables);
}

/**
 * Implements hook_theme_registry_alter().
 */
function ncms_paragraphs_theme_registry_alter(&$theme_registry) {
  // Override layout-paragraphs-builder-component-menu.html.twig to support
  // the changes in \Drupal\ncms_paragraphs\ComponentMenu::preprocessTemplate.
  $module_path = \Drupal::service('extension.path.resolver')->getPath('module', 'ncms_paragraphs');
  $theme_registry['layout_paragraphs_builder_component_menu']['theme path'] = $module_path;
  $theme_registry['layout_paragraphs_builder_component_menu']['path'] = $module_path . '/templates';
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Implements our third-party settings into the paragraphs type form.
 */
function ncms_paragraphs_form_paragraphs_type_edit_form_alter(&$form, FormStateInterface $form_state) {
  /** @var \Drupal\ncms_paragraphs\ParagraphsTypeSettings $paragraph_type_settings */
  $paragraph_type_settings = \Drupal::service('ncms_paragraphs.paragraph_type_settings');
  $paragraph_type_settings->paragraphsTypeFormAlter($form, $form_state);
}
